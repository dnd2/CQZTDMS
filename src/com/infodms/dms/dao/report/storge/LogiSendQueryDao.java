package com.infodms.dms.dao.report.storge;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;

import com.infodms.dms.common.Constant;
import com.infodms.dms.dao.common.AjaxSelectDao;
import com.infodms.dms.dao.common.BaseDao;
import com.infodms.dms.util.CommonUtils;
import com.infoservice.po3.bean.PO;

public class LogiSendQueryDao extends BaseDao<PO>{
	public static final Logger logger = Logger.getLogger(LogiSendQueryDao.class);
	public static LogiSendQueryDao dao = new LogiSendQueryDao();
	private static final AjaxSelectDao dao1 = new AjaxSelectDao();
	public static LogiSendQueryDao getInstance(){
		return dao;
	}
	@Override
	protected PO wrapperPO(ResultSet rs, int idx) {
		// TODO Auto-generated method stub
		return null;
	}
	public List<Map<String, Object>> getLogiSendInfo(Map<String, Object> map)  throws Exception{
		String endDate = (String)map.get("endDate");//年月日
		String dateYear=endDate.substring(0,4);//获取年
		String dateYMonth=endDate.substring(0,7);//获取年月
		String nowStartTime=endDate+" 00:00:00";//当天开始
		String nowEndTime=endDate+" 23:59:59";//当天结束
		String nowMonthFirstTime=dateYMonth+"-01 00:00:00";//当月开始
		String nowYearFirstTime=dateYear+"-01-01 00:00:00";//当年开始
		List<Map<String, Object>> seriesList = getSeriesList();
		List<Object> params=new ArrayList<Object>();
		StringBuffer sbSql  =  new StringBuffer();
		sbSql.append("WITH STORAGE_DAY AS\n");
		sbSql.append(" ( --入库日\n");
		sbSql.append("  SELECT A.YIELDLY, A.SERIES_ID, COUNT(1) STORAGE_DAY_COUNT\n");
		sbSql.append("    FROM TM_VEHICLE A\n");
		sbSql.append("   WHERE A.ORG_STORAGE_DATE >=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowStartTime);
		sbSql.append("     AND A.ORG_STORAGE_DATE <=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.YIELDLY, A.SERIES_ID),\n");
		sbSql.append("ORDER_DAY AS\n");
		sbSql.append(" ( --下单日\n");
		sbSql.append("  SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(C.CHECK_AMOUNT, 0)) ORDER_DAY_COUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("          TT_VS_ORDER           B,\n");
		sbSql.append("          TT_VS_ORDER_DETAIL    C,\n");
		sbSql.append("          VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = C.ORDER_ID\n");
		sbSql.append("     AND C.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND A.ASS_DATE >=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowStartTime);
		sbSql.append("     AND A.ASS_DATE <=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("         AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("BO_DAY AS\n");
		sbSql.append(" ( --组板日\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, SUM(B.BOARD_NUM) BO_DAY_COUNT\n");
		sbSql.append("    FROM TT_SALES_BOARD A, TT_SALES_BO_DETAIL B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_ID = B.BO_ID\n");
		sbSql.append("     AND B.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND A.BO_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowStartTime);
		sbSql.append("     AND A.BO_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND B.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("OUT_DAY AS\n");
		sbSql.append(" ( --出库日\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) OUT_DAY_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.OUT_DATE >=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowStartTime);
		sbSql.append("     AND B.OUT_DATE <=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("SEND_DAY AS\n");
		sbSql.append(" ( --发运日\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) SEND_DAY_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.SEND_DATE >=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowStartTime);
		sbSql.append("     AND B.SEND_DATE <=\n");
		sbSql.append("         TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("ALL_DAY_RES AS\n");
		sbSql.append(" (SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(E.CHECK_AMOUNT, 0)) CHECK_AMOUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("         TT_VS_ORDER           B,\n");
		sbSql.append("         TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("         VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("     AND E.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND TO_CHAR(A.ASS_DATE, 'YYYY-MM') =\n");
		sbSql.append("         TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')), -1), 'YYYY-MM')\n");
		params.add(nowStartTime);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("REDAY_DAY_RES AS\n");
		sbSql.append("(SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(C.BOARD_NUM, 0)) BO_BMONTH_COUNT\n");
		sbSql.append("  FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("       TT_VS_ORDER           B,\n");
		sbSql.append("       TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("       TT_SALES_BO_DETAIL    C,\n");
		sbSql.append("       Tt_Sales_Board        E,\n");
		sbSql.append("       VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append(" WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("   AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("   AND E.DETAIL_ID = C.OR_DE_ID\n");
		sbSql.append("   AND C.MAT_ID = D.MATERIAL_ID\n");
		sbSql.append("   AND C.BO_ID = E.BO_ID\n");
		sbSql.append("   AND C.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("   AND TO_CHAR(A.ASS_DATE, 'YYYY-MM') =\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')), -1), 'YYYY-MM')\n");
		params.add(nowStartTime);
		sbSql.append("   AND TO_CHAR(E.BO_DATE, 'YYYY-MM') =\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')), -1), 'YYYY-MM')\n");
		params.add(nowStartTime);
		sbSql.append(" GROUP BY A.AREA_ID, D.SERIES_ID),STORAGE_MONTH AS\n");
		sbSql.append(" ( --入库月\n");
		sbSql.append("  SELECT A.YIELDLY, A.SERIES_ID, COUNT(1) STORAGE_MONTH_COUNT\n");
		sbSql.append("    FROM TM_VEHICLE A\n");
		sbSql.append("   WHERE A.ORG_STORAGE_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowMonthFirstTime);
		sbSql.append("   AND   A.ORG_STORAGE_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.YIELDLY, A.SERIES_ID),\n");
		sbSql.append("ORDER_MONTH AS\n");
		sbSql.append(" ( --下单月\n");
		sbSql.append("  SELECT A.AREA_ID,\n");
		sbSql.append("          D.SERIES_ID,\n");
		sbSql.append("          SUM(NVL(C.CHECK_AMOUNT, 0)) ORDER_MONTH_COUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("          TT_VS_ORDER           B,\n");
		sbSql.append("          TT_VS_ORDER_DETAIL    C,\n");
		sbSql.append("          VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = C.ORDER_ID\n");
		sbSql.append("     AND C.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND A.ASS_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowMonthFirstTime);
		sbSql.append("     AND A.ASS_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("BO_MONTH AS\n");
		sbSql.append(" ( --组板月\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, SUM(B.BOARD_NUM) BO_MONTH_COUNT\n");
		sbSql.append("    FROM TT_SALES_BOARD A, TT_SALES_BO_DETAIL B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_ID = B.BO_ID\n");
		sbSql.append("     AND B.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND A.BO_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowMonthFirstTime);
		sbSql.append("     AND A.BO_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND B.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("OUT_MONTH AS\n");
		sbSql.append(" ( --出库月\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) OUT_MONTH_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.OUT_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowMonthFirstTime);
		sbSql.append("     AND B.OUT_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("SEND_MONTH AS\n");
		sbSql.append(" ( --发运月\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) SEND_MONTH_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("     AND B.SEND_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowMonthFirstTime);
		sbSql.append("     AND B.SEND_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("ALL_NOT_RES AS\n");
		sbSql.append(" (SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(E.CHECK_AMOUNT, 0)) CHECK_AMOUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("         TT_VS_ORDER           B,\n");
		sbSql.append("         TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("         VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("     AND E.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND A.ASS_DATE<=TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("REDAY_NOT_RES AS\n");
		sbSql.append(" (SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(C.BOARD_NUM, 0)) BO_BMONTH_COUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("         TT_VS_ORDER           B,\n");
		sbSql.append("         TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("         TT_SALES_BO_DETAIL    C,\n");
		sbSql.append("         VW_MATERIAL_GROUP_MAT D,\n");
		sbSql.append("         Tt_Sales_Board        E\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("     AND E.DETAIL_ID = C.OR_DE_ID\n");
		sbSql.append("     AND C.MAT_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND C.IS_ENABLE =?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND E.BO_ID=C.BO_ID\n");
		sbSql.append("     AND E.BO_DATE<=TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("ALL_YEAR_RES AS\n");
		sbSql.append("(SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(E.CHECK_AMOUNT, 0)) CHECK_AMOUNT\n");
		sbSql.append("  FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("       TT_VS_ORDER           B,\n");
		sbSql.append("       TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("       VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append(" WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("   AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("   AND E.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("   AND TO_CHAR(A.ASS_DATE, 'YYYY-MM-DD') >=\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')|| '-12-01'\n");
		params.add(nowEndTime);
		sbSql.append("   AND TO_CHAR(A.ASS_DATE, 'YYYY-MM-DD') <=\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')|| '-12-31'\n");
		params.add(nowEndTime);
		sbSql.append(" GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("REDAY_YEAR_RES AS\n");
		sbSql.append("(SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(C.BOARD_NUM, 0)) BO_BMONTH_COUNT\n");
		sbSql.append("  FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("       TT_VS_ORDER           B,\n");
		sbSql.append("       TT_VS_ORDER_DETAIL    E,\n");
		sbSql.append("       TT_SALES_BO_DETAIL    C,\n");
		sbSql.append("       Tt_Sales_Board        E,\n");
		sbSql.append("       VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append(" WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("   AND B.ORDER_ID = E.ORDER_ID\n");
		sbSql.append("   AND E.DETAIL_ID = C.OR_DE_ID\n");
		sbSql.append("   AND C.MAT_ID = D.MATERIAL_ID\n");
		sbSql.append("   AND C.BO_ID = E.BO_ID\n");
		sbSql.append("   AND C.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("   AND TO_CHAR(A.ASS_DATE, 'YYYY-MM-DD') >=TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')|| '-12-01'\n");
		params.add(nowEndTime);
		sbSql.append("   AND TO_CHAR(A.ASS_DATE, 'YYYY-MM-DD') <=TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')||'-12-31'\n");
		params.add(nowEndTime);
		sbSql.append("   AND TO_CHAR(E.BO_DATE, 'YYYY-MM-DD') >=\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')|| '-12-01'\n");
		params.add(nowEndTime);
		sbSql.append("   AND TO_CHAR(E.BO_DATE, 'YYYY-MM-DD') <=\n");
		sbSql.append("       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY'), -1), 'YYYY')||'-12-31'\n");
		params.add(nowEndTime);
		sbSql.append(" GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("STORAGE_YEAR AS\n");
		sbSql.append(" ( --入库年\n");
		sbSql.append("  SELECT A.YIELDLY, A.SERIES_ID, COUNT(1) STORAGE_YEAR_COUNT\n");
		sbSql.append("    FROM TM_VEHICLE A\n");
		sbSql.append("    WHERE A.ORG_STORAGE_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowYearFirstTime);
		sbSql.append("     AND   A.ORG_STORAGE_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.YIELDLY, A.SERIES_ID),\n");
		sbSql.append("ORDER_YEAR AS\n");
		sbSql.append(" ( --下单年\n");
		sbSql.append("  SELECT A.AREA_ID, D.SERIES_ID, SUM(NVL(C.CHECK_AMOUNT, 0)) ORDER_YEAR_COUNT\n");
		sbSql.append("    FROM TT_SALES_ASSIGN       A,\n");
		sbSql.append("          TT_VS_ORDER           B,\n");
		sbSql.append("          TT_VS_ORDER_DETAIL    C,\n");
		sbSql.append("          VW_MATERIAL_GROUP_MAT D\n");
		sbSql.append("   WHERE A.ORDER_ID = B.ORDER_ID\n");
		sbSql.append("     AND B.ORDER_ID = C.ORDER_ID\n");
		sbSql.append("     AND C.MATERIAL_ID = D.MATERIAL_ID\n");
		sbSql.append("     AND A.ASS_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowYearFirstTime);
		sbSql.append("     AND A.ASS_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, D.SERIES_ID),\n");
		sbSql.append("BO_YEAR AS\n");
		sbSql.append(" ( --组板年\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, SUM(B.BOARD_NUM) BO_YEAR_COUNT\n");
		sbSql.append("    FROM TT_SALES_BOARD A, TT_SALES_BO_DETAIL B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_ID = B.BO_ID\n");
		sbSql.append("     AND B.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND A.BO_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowYearFirstTime);
		sbSql.append("     AND A.BO_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("     AND B.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("OUT_YEAR AS\n");
		sbSql.append(" ( --出库年\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) OUT_YEAR_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND B.OUT_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowYearFirstTime);
		sbSql.append("     AND B.OUT_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("SEND_YEAR AS\n");
		sbSql.append(" ( --发运年\n");
		sbSql.append("  SELECT A.AREA_ID, C.SERIES_ID, COUNT(1) SEND_YEAR_COUNT\n");
		sbSql.append("    FROM TT_SALES_BO_DETAIL A, TT_SALES_ALLOCA_DE B, VW_MATERIAL_GROUP_MAT C\n");
		sbSql.append("   WHERE A.BO_DE_ID = B.BO_DE_ID\n");
		sbSql.append("     AND A.MAT_ID = C.MATERIAL_ID\n");
		sbSql.append("     AND A.IS_ENABLE = ?\n");
		params.add(Constant.IF_TYPE_YES);
		sbSql.append("     AND A.SEND_TYPE!=?\n");
		params.add(Constant.TRANSPORT_TYPE_01);
		sbSql.append("     AND B.SEND_DATE >= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowYearFirstTime);
		sbSql.append("     AND B.SEND_DATE <= TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("   GROUP BY A.AREA_ID, C.SERIES_ID),\n");
		sbSql.append("STORAGE_THIS AS\n");
		sbSql.append("(--实时库存\n");
		sbSql.append(" SELECT A.YIELDLY, A.SERIES_ID, SUM(STORAGE_THIS_COUNT) STORAGE_THIS_COUNT\n");
		sbSql.append("  FROM (SELECT A.YIELDLY, A.SERIES_ID, COUNT(1) STORAGE_THIS_COUNT\n");
		sbSql.append("          FROM TM_VEHICLE A\n");
		sbSql.append("         WHERE A.ORG_STORAGE_DATE <=\n");
		sbSql.append("               TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("           AND A.LIFE_CYCLE = ?\n");
		params.add(Constant.VEHICLE_LIFE_02);
		sbSql.append("         GROUP BY A.YIELDLY, A.SERIES_ID\n");
		sbSql.append("        UNION ALL\n");
		sbSql.append("        SELECT A.YIELDLY, A.SERIES_ID, COUNT(1) STORAGE_THIS_COUNT\n");
		sbSql.append("          FROM TM_VEHICLE A, TT_SALES_ALLOCA_DE B\n");
		sbSql.append("         WHERE A.VEHICLE_ID = B.VEHICLE_ID\n");
		sbSql.append("           AND A.ORG_STORAGE_DATE <=\n");
		sbSql.append("               TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("           AND B.OUT_DATE >=\n");
		sbSql.append("               TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')\n");
		params.add(nowEndTime);
		sbSql.append("         GROUP BY A.YIELDLY, A.SERIES_ID) A\n");
		sbSql.append(" GROUP BY A.YIELDLY, A.SERIES_ID)\n"); 
		sbSql.append("SELECT D.GROUP_ID,\n");
		sbSql.append("       D.GROUP_NAME,\n");
		sbSql.append("       E.AREA_ID,\n");
		sbSql.append("       NVL(A.ORDER_DAY_COUNT, 0) ORDER_DAY_COUNT,\n");
		sbSql.append("       NVL(A1.BO_DAY_COUNT, 0) BO_DAY_COUNT,\n");
		sbSql.append("       NVL(A2.OUT_DAY_COUNT, 0) OUT_DAY_COUNT,\n");
		sbSql.append("       NVL(A3.SEND_DAY_COUNT, 0) SEND_DAY_COUNT,\n");
		sbSql.append("       NVL(T.CHECK_AMOUNT, 0) - NVL(T1.BO_BMONTH_COUNT, 0) BO_BMONTH_COUNT,\n");
		sbSql.append("       NVL(A5.ORDER_MONTH_COUNT, 0) ORDER_MONTH_COUNT,\n");
		sbSql.append("       NVL(A6.BO_MONTH_COUNT, 0) BO_MONTH_COUNT,\n");
		sbSql.append("       NVL(A7.OUT_MONTH_COUNT, 0) OUT_MONTH_COUNT,\n");
		sbSql.append("       NVL(A8.SEND_MONTH_COUNT, 0) SEND_MONTH_COUNT,\n");
		sbSql.append("       NVL(T2.CHECK_AMOUNT, 0) - NVL(T3.BO_BMONTH_COUNT, 0) NOT_BO_COUNT,\n");
		sbSql.append("       NVL(T4.CHECK_AMOUNT, 0) - NVL(T5.BO_BMONTH_COUNT, 0) BO_BYEAR_COUNT,\n");
		sbSql.append("       NVL(A11.ORDER_YEAR_COUNT, 0) ORDER_YEAR_COUNT,\n");
		sbSql.append("       NVL(A12.BO_YEAR_COUNT, 0) BO_YEAR_COUNT,\n");
		sbSql.append("       NVL(A13.OUT_YEAR_COUNT, 0) OUT_YEAR_COUNT,\n");
		sbSql.append("       NVL(A14.SEND_YEAR_COUNT, 0) SEND_YEAR_COUNT,\n");
		sbSql.append("       NVL(A15.STORAGE_DAY_COUNT, 0) STORAGE_DAY_COUNT,\n");
		sbSql.append("       NVL(A16.STORAGE_MONTH_COUNT, 0) STORAGE_MONTH_COUNT,\n");
		sbSql.append("       NVL(A17.STORAGE_YEAR_COUNT, 0) STORAGE_YEAR_COUNT,\n");
		sbSql.append("       NVL(A18.STORAGE_THIS_COUNT, 0) STORAGE_THIS_COUNT\n");
		sbSql.append("  FROM TM_VHCL_MATERIAL_GROUP D,\n");
		sbSql.append("       TM_BUSINESS_AREA       E,\n");
		sbSql.append("       TM_AREA_GROUP          F,\n");
		sbSql.append("       ORDER_DAY              A,\n");
		sbSql.append("       BO_DAY                 A1,\n");
		sbSql.append("       OUT_DAY                A2,\n");
		sbSql.append("       SEND_DAY               A3,\n");
		sbSql.append("       ORDER_MONTH            A5,\n");
		sbSql.append("       BO_MONTH               A6,\n");
		sbSql.append("       OUT_MONTH              A7,\n");
		sbSql.append("       SEND_MONTH             A8,\n");
		sbSql.append("       ORDER_YEAR             A11,\n");
		sbSql.append("       BO_YEAR                A12,\n");
		sbSql.append("       OUT_YEAR               A13,\n");
		sbSql.append("       SEND_YEAR              A14,\n");
		sbSql.append("       STORAGE_DAY            A15,\n");
		sbSql.append("       STORAGE_MONTH          A16,\n");
		sbSql.append("       STORAGE_YEAR           A17,\n");
		sbSql.append("       STORAGE_THIS           A18,\n");
		sbSql.append("       ALL_DAY_RES            T,\n");
		sbSql.append("       REDAY_DAY_RES          T1,\n");
		sbSql.append("       ALL_NOT_RES            T2,\n");
		sbSql.append("       REDAY_NOT_RES          T3,\n");
		sbSql.append("       ALL_YEAR_RES           T4,\n");
		sbSql.append("       REDAY_YEAR_RES         T5\n");
		sbSql.append(" WHERE E.AREA_ID = F.AREA_ID\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = D.GROUP_ID\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A1.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A2.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A3.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A5.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A6.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A7.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A8.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A11.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A12.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A13.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A14.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A15.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A16.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A17.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = A18.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = T.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = T2.SERIES_ID(+)\n");
		sbSql.append("   AND F.MATERIAL_GROUP_ID = T4.SERIES_ID(+)\n");
		sbSql.append("   AND T.SERIES_ID = T1.SERIES_ID(+)\n");
		sbSql.append("   AND T2.SERIES_ID = T3.SERIES_ID(+)\n");
		sbSql.append("   AND T4.SERIES_ID = T5.SERIES_ID(+)\n");
		sbSql.append(" ORDER BY E.AREA_ID, D.GROUP_ID"); 
		return dao.pageQuery(sbSql.toString(), params, getFunName());
	}
	
	
	//得到车系列表
	public List<Map<String, Object>> getSeriesList(){
		StringBuffer sbSql = new StringBuffer();
		sbSql.append("SELECT A.AREA_ID,\n");
		sbSql.append("       A.AREA_NAME,\n");
		sbSql.append("       C.GROUP_ID,\n");
		sbSql.append("       NVL(C.GROUP_NAME, 0) GROUP_NAME,\n");
		sbSql.append("       NVL(D.ORDER_COUNT, 0) ORDER_COUNT,\n");
		sbSql.append("       NVL(D.ASS_COUNT, 0) ASS_COUNT,\n");
		sbSql.append("       NVL(D.BO_COUNT, 0) BO_COUNT,\n");
		sbSql.append("       NVL(D.OUT_COUNT, 0) OUT_COUNT,\n");
		sbSql.append("       NVL(D.SEND_COUNT, 0) SEND_COUNT,\n");
		sbSql.append("       NVL(D.BEFORE_YEAR_COUNT, 0) BEFORE_YEAR_COUNT\n");
		sbSql.append("  FROM TM_BUSINESS_AREA       A,\n");
		sbSql.append("       TM_AREA_GROUP          B,\n");
		sbSql.append("       TM_VHCL_MATERIAL_GROUP C,\n");
		sbSql.append("       TT_LOGISEND_HISTORY    D\n");
		sbSql.append(" WHERE A.AREA_ID = B.AREA_ID\n");
		sbSql.append("   AND B.MATERIAL_GROUP_ID = C.GROUP_ID\n");
		sbSql.append("   AND C.GROUP_ID = D.SER_ID(+)\n");
		sbSql.append(" ORDER BY A.AREA_ID, C.GROUP_ID"); 
		List<Object> params=new ArrayList<Object>();
		//params.add(2);//车系第二级
		//params.add(Constant.STATUS_ENABLE);
		return pageQuery(sbSql.toString(), params, getFunName());
	}
}
